package bi.baiqiu.controller;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import bi.baiqiu.mapper.WareHouseMapper;
import bi.baiqiu.pojo.WareHouse;
import bi.baiqiu.pojo.WareHouseExample;
@Controller
@RequestMapping("wareHouse")
public class WareHouseController extends BaseController {
	
	@Autowired
	private WareHouseMapper wareHouseDao;
	@ResponseBody
	@RequestMapping(value = "queryWareHourse.do")
	public void queryWareHourse(HttpServletRequest request, HttpServletResponse response) {
		try {
			//Gson gson = new GsonBuilder().serializeNulls().create();
			WareHouseExample example=new WareHouseExample();
			example.createCriteria().andFacetEqualTo(true).andVisibleEqualTo(true);
			example.setOrderByClause("sort");
			List<WareHouse> list=wareHouseDao.selectByExample(example);
			WareHouse totalWareHouse=new WareHouse(0,0,0,0,0,0,0,0,0,0);
			for(WareHouse war:list){
				totalWareHouse.setNotTurnAmount(war.getNotTurnAmount()+totalWareHouse.getNotTurnAmount());
				totalWareHouse.setTrunAmount(war.getTrunAmount()+totalWareHouse.getTrunAmount());
				totalWareHouse.setNotPrintAmount(war.getNotPrintAmount()+totalWareHouse.getNotPrintAmount());
				totalWareHouse.setDistributionAmount(war.getDistributionAmount()+totalWareHouse.getDistributionAmount());
				totalWareHouse.setTotalSingleAmount(war.getTotalSingleAmount()+totalWareHouse.getTotalSingleAmount());
				totalWareHouse.setTodayShippedAmount(war.getTodayShippedAmount()+totalWareHouse.getTodayShippedAmount());
				totalWareHouse.setTodayShippedGeneralAmount(war.getTodayShippedGeneralAmount()+totalWareHouse.getTodayShippedGeneralAmount());
				totalWareHouse.setTodayShippedPresellAmount(war.getTodayShippedPresellAmount()+totalWareHouse.getTodayShippedPresellAmount());
				totalWareHouse.setLastMonthShippedAmount(war.getLastMonthShippedAmount()+totalWareHouse.getLastMonthShippedAmount());
				totalWareHouse.setPresentMonthShippedAmount(war.getPresentMonthShippedAmount()+totalWareHouse.getPresentMonthShippedAmount());
			}
			//String json = "{\"total\":" +gson.toJson(totalWareHouse)+ ",\"rows\":" + gson.toJson(list) + "}";
			WriteObject(response, totalWareHouse);
			WriteObject(response, list);
		} catch (Exception e) {
			e.printStackTrace();
			WriteObject(response, systemErroy);
		}
	}
	
}
