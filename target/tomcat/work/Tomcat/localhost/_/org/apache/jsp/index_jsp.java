/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2017-12-06 07:17:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zh\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>事业部图表</title>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t//封装方法，压缩之后减少文件大小\r\n");
      out.write("\t\tfunction get_attribute(node, attr, default_value) {\r\n");
      out.write("\t\t\treturn node.getAttribute(attr) || default_value;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//封装方法，压缩之后减少文件大小\r\n");
      out.write("\t\tfunction get_by_tagname(name) {\r\n");
      out.write("\t\t\treturn document.getElementsByTagName(name);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//获取配置参数\r\n");
      out.write("\t\tfunction get_config_option() {\r\n");
      out.write("\t\t\tvar scripts = get_by_tagname(\"script\"),\r\n");
      out.write("\t\t\t\tscript_len = scripts.length,\r\n");
      out.write("\t\t\t\tscript = scripts[script_len - 1]; //当前加载的script\r\n");
      out.write("\t\t\treturn {\r\n");
      out.write("\t\t\t\tl: script_len, //长度，用于生成id用\r\n");
      out.write("\t\t\t\tz: get_attribute(script, \"zIndex\", -1), //z-index\r\n");
      out.write("\t\t\t\to: get_attribute(script, \"opacity\", 0.5), //opacity\r\n");
      out.write("\t\t\t\tc: get_attribute(script, \"color\", \"0,0,0\"), //color\r\n");
      out.write("\t\t\t\tn: get_attribute(script, \"count\", 99) //count\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//设置canvas的高宽\r\n");
      out.write("\t\tfunction set_canvas_size() {\r\n");
      out.write("\t\t\tcanvas_width = the_canvas.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, \r\n");
      out.write("\t\t\tcanvas_height = the_canvas.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//绘制过程\r\n");
      out.write("\t\tfunction draw_canvas() {\r\n");
      out.write("\t\t\tcontext.clearRect(0, 0, canvas_width, canvas_height);\r\n");
      out.write("\t\t\t//随机的线条和当前位置联合数组\r\n");
      out.write("\t\t\tvar all_array = [current_point].concat(random_lines);\r\n");
      out.write("\t\t\tvar e, i, d, x_dist, y_dist, dist; //临时节点\r\n");
      out.write("\t\t\t//遍历处理每一个点\r\n");
      out.write("\t\t\trandom_lines.forEach(function(r) {\r\n");
      out.write("\t\t\t\tr.x += r.xa, \r\n");
      out.write("\t\t\t\tr.y += r.ya, //移动\r\n");
      out.write("\t\t\t\tr.xa *= r.x > canvas_width || r.x < 0 ? -1 : 1, \r\n");
      out.write("\t\t\t\tr.ya *= r.y > canvas_height || r.y < 0 ? -1 : 1, //碰到边界，反向反弹\r\n");
      out.write("\t\t\t\tcontext.fillRect(r.x - 0.5, r.y - 0.5, 1, 1); //绘制一个宽高为1的点\r\n");
      out.write("\t\t\t\tfor (i = 0; i < all_array.length; i++) {\r\n");
      out.write("\t\t\t\t\te = all_array[i];\r\n");
      out.write("\t\t\t\t\t//不是当前点\r\n");
      out.write("\t\t\t\t\tif (r !== e && null !== e.x && null !== e.y) {\r\n");
      out.write("\t\t\t\t\t\t\tx_dist = r.x - e.x, //x轴距离 l\r\n");
      out.write("\t\t\t\t\t\t\ty_dist = r.y - e.y, //y轴距离 n\r\n");
      out.write("\t\t\t\t\t\t\tdist = x_dist * x_dist + y_dist * y_dist; //总距离, m\r\n");
      out.write("\t\t\t\t\t\tdist < e.max && (e === current_point && dist >= e.max / 2 && (r.x -= 0.03 * x_dist, r.y -= 0.03 * y_dist), //靠近的时候加速\r\n");
      out.write("\t\t\t\t\t\t\td = (e.max - dist) / e.max, \r\n");
      out.write("\t\t\t\t\t\t\tcontext.beginPath(), \r\n");
      out.write("\t\t\t\t\t\t\tcontext.lineWidth = d / 2, \r\n");
      out.write("\t\t\t\t\t\t\tcontext.strokeStyle = \"rgba(\" + config.c + \",\" + (d + 0.2) + \")\", \r\n");
      out.write("\t\t\t\t\t\t\tcontext.moveTo(r.x, r.y), \r\n");
      out.write("\t\t\t\t\t\t\tcontext.lineTo(e.x, e.y), \r\n");
      out.write("\t\t\t\t\t\t\tcontext.stroke();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tall_array.splice(all_array.indexOf(r), 1);\r\n");
      out.write("\t\t\t}), frame_func(draw_canvas);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//创建画布，并添加到body中\r\n");
      out.write("\t\tvar the_canvas = document.createElement(\"canvas\"), //画布\r\n");
      out.write("\t\t\tconfig = get_config_option(), //配置\r\n");
      out.write("\t\t\tcanvas_id = \"c_n\" + config.l, //canvas id\r\n");
      out.write("\t\t\tcontext = the_canvas.getContext(\"2d\"), canvas_width, canvas_height, \r\n");
      out.write("\t\t\tframe_func = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(func) {\r\n");
      out.write("\t\t\t\twindow.setTimeout(func, 1000 / 45);\r\n");
      out.write("\t\t\t}, random = Math.random, \r\n");
      out.write("\t\t\tcurrent_point = {\r\n");
      out.write("\t\t\t\tx: null, //当前鼠标x\r\n");
      out.write("\t\t\t\ty: null, //当前鼠标y\r\n");
      out.write("\t\t\t\tmax: 20000\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\tthe_canvas.id = canvas_id;\r\n");
      out.write("\t\tthe_canvas.style.cssText = \"position:fixed;top:0;left:0;z-index:\" + config.z + \";opacity:\" + config.o;\r\n");
      out.write("\t\tget_by_tagname(\"body\")[0].appendChild(the_canvas);\r\n");
      out.write("\t\t//初始化画布大小\r\n");
      out.write("\t\tset_canvas_size(), window.onresize = set_canvas_size;\r\n");
      out.write("\t\t//当时鼠标位置存储，离开的时候，释放当前位置信息\r\n");
      out.write("\t\twindow.onmousemove = function(e) {\r\n");
      out.write("\t\t\te = e || window.event, current_point.x = e.clientX, current_point.y = e.clientY;\r\n");
      out.write("\t\t}, window.onmouseout = function() {\r\n");
      out.write("\t\t\tcurrent_point.x = null, current_point.y = null;\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t//随机生成config.n条线位置信息\r\n");
      out.write("\t\tfor (var random_lines = [], i = 0; config.n > i; i++) {\r\n");
      out.write("\t\t\tvar x = random() * canvas_width, //随机位置\r\n");
      out.write("\t\t\t\ty = random() * canvas_height,\r\n");
      out.write("\t\t\t\txa = 2 * random() - 1, //随机运动方向\r\n");
      out.write("\t\t\t\tya = 2 * random() - 1;\r\n");
      out.write("\t\t\trandom_lines.push({\r\n");
      out.write("\t\t\t\tx: x,\r\n");
      out.write("\t\t\t\ty: y,\r\n");
      out.write("\t\t\t\txa: xa,\r\n");
      out.write("\t\t\t\tya: ya,\r\n");
      out.write("\t\t\t\tmax: 6000 //沾附距离\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//0.1秒后绘制\r\n");
      out.write("\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\tdraw_canvas();\r\n");
      out.write("\t\t}, 100);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"/salesAnalysis/astronymy/calendar/get.do\">\r\n");
      out.write("源日期：<input type=\"date\">\r\n");
      out.write("<select>\r\n");
      out.write("<option>阴历转阳历</option>\r\n");
      out.write("<option>阳历转阴历</option>\r\n");
      out.write("</select>\r\n");
      out.write("<button type=\"submit\">提交</button>\r\n");
      out.write("转换后日期：<input type=\"date\">\r\n");
      out.write("</form>\r\n");
      out.write("<script src=\"http://open.sojson.com/common/js/canvas-nest.min.js\" count=\"200\" zindex=\"-2\" opacity=\"0.5\" color=\"47,135,193\" type=\"text/javascript\">\r\n");
      out.write("</script>                  \r\n");
      out.write("\r\n");
      out.write("<canvas id=\"c_16\" width=\"1292\" height=\"871\" style=\"position: fixed; top: 0px; left: 0px; z-index: -2; opacity: 0.5;\">\r\n");
      out.write("</canvas>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
